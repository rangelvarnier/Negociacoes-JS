{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCAELC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBADH,EAEFF,IAFE,CAEG;AAAA,mCAAOE,IAAIC,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGF;;;yCAEIL,G,EAAKM,I,EAAK;AAAA;;AACX,+BAAOL,MAAMD,GAAN,EAAW;AACdO,qCAAU,EAAC,gBAAiB,kBAAlB,EADI;AAEdC,oCAAS,MAFK;AAGdC,kCAAOC,KAAKC,SAAL,CAAeL,IAAf;AAHO,yBAAX,EAKNJ,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH;;;kDAEYA,G,EAAK;AACf,4BAAI,CAACA,IAAIQ,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACb,+BAAOV,GAAP;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n     }\n\n     post(url, dado){\n         return fetch(url, {\n             headers : {'Content-type' : 'application/json'},\n             method : 'post',\n             body : JSON.stringify(dado)\n         })\n         .then(res => this._handleErrors(res));\n     }\n\n    _handleErrors(res) {\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n}\n"]}